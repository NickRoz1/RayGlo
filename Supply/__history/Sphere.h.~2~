//---------------------------------------------------------------------------

#ifndef SphereH
#define SphereH
//---------------------------------------------------------------------------

#include "Vector3D.h"
#include "Math.h"

class Sphere{
	public:
		Vector3D center;
		double radius;
		void set_param(double cen[], double rad)
		{
			center.x = cen[0];
			center.y = cen[1];
			center.z = cen[2];
			radius = rad;
		}
		bool intersection_check(Vector3D dir, double &t)
		{
			Vector3D tempCenter(-center.x, -center.y, -center.z);// Вектор идёт от центра к началу
			double b = 2*(dir * tempCenter);  // dir нормализован
			double c = tempCenter * tempCenter - radius*radius; // Ненужная операция, оба значения - константы
			double disc = b*b - 4*c;
			if(disc<0) return false;
			double squareRoot = sqrt(disc);
			double t0 = ((-b+squareRoot)/2);
			double t1 = ((-b-squareRoot)/2);
			t = (t0 < t1 ? t0 : t1);
			return true;
		}
};

#endif
