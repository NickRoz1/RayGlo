//---------------------------------------------------------------------------

#ifndef ClassesH
#define ClassesH
//---------------------------------------------------------------------------

class Vector3D{
	public:
		double x,y,z;
		Vector3D();
		Vector3D(double xi, double yi, double zi) : x(xi), y(yi), z(zi) {};
		Vector3D operator + (const Vector3D &a) const;
		Vector3D operator - (const Vector3D &a) const;
		double operator * (const Vector3D &a) const; // dot product
		void operator * (const double &b);
};

Vector3D Vector3D::operator + (const Vector3D &a) const{
	return Vector3D(a.x + this->x, a.y + this->y, a.z + this->z);
}

Vector3D Vector3D::operator - (const Vector3D &a) const{
	return Vector3D(this->x - a.x  , this->y - a.y  , this->z - a.z );
}

double Vector3D::operator * (const Vector3D &a) const{
	return (this->x)*a.x + (this->y)*a.y + (this->z)*a.z;
}

void Vector3D::operator * (const double &b){
	this->x *= b;
	this->y *= b;
	this->z *= b;
}

#endif

