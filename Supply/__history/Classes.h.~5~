//---------------------------------------------------------------------------

#ifndef ClassesH
#define ClassesH
//---------------------------------------------------------------------------

#include "Math.h"

//---------------------------------------------------------------------------

class Vector3D{
	public:
		double x,y,z;
		Vector3D();
		Vector3D(double xi, double yi, double zi) : x(xi), y(yi), z(zi) {}
		Vector3D(const Vector3D &vector) : x(vector.x), y(vector.y), z(vector.z) {}
		void normalize();
};

void Vector3D::normalize(){
	double length = sqrt(this->x*this->x + this->y*this->y + this->z*this->z);
	this->x/=length;
	this->y/=length;
	this->z/=length;
}

Vector3D operator + (const Vector3D &a, const Vector3D &b){
	return Vector3D(a.x + b.x, a.y + b.y, a.z + b.z);
}

Vector3D operator - (const Vector3D &a, const Vector3D &b){
	return Vector3D(a.x - b.x, a.y - b.y, a.z - b.z);
}

double operator * (const Vector3D &a, const Vector3D &b){
	return (a.x)*(b.x) + (a.y)*(b.y) + (a.z)*(b.z);
}

void operator * (const double &b, Vector3D &a){
	a.x *= b;
	a.y *= b;
	a.z *= b;
}

void operator * (Vector3D &a, const double &b){
	a.x *= b;
	a.y *= b;
	a.z *= b;
}

#endif

